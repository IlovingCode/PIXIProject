import { Bullet } from 'game/Soldier';

export class JumpComponent {
    constructor(target) {
        this.target = target;
        this.position = target.position;
        this.y0 = this.position.y;
        this.v = target.v;
        this.a = target.a;
    }

    start() {
        if (!this.target.onGround)
            return;

        this.target.onGround = false;
        this.v.y = -500;
        this.a.y = Math.abs(this.v.y) * 2;
    }

    update(dt) {
        if (!this.target.onGround) {
            if (this.position.y > this.y0) {
                this.v.y = 0;
                this.position.y = this.y0;
                this.target.onGround = true;
            }
        } else {
            if (this.v.x * this.a.x > 0)
                this.v.x = 0;
        }
    }
}

export class MoveComponent {
    constructor(target) {
        this.position = target.position;
        this.v = target.v;
        this.a = target.a;
    }

    start() {
    }

    update(dt) {
        if (this.v.x != 0) {
            this.v.x += this.a.x * dt;
            this.position.x += this.v.x * dt;
        }

        if (this.v.y != 0) {
            this.v.y += this.a.y * dt;
            this.position.y += this.v.y * dt;
        }
    }
}

export class ForceComponent {
    constructor(target) {
        this.target = target;
        this.v = target.v;
        this.a = target.a;
        this.v.x = 100;
    }

    start() {
        if (this.target.onGround)
            return;

        this.v.y = 200 * Math.sin(this.target.rotation + Math.PI / 2);
        this.v.x = 300 * Math.cos(this.target.rotation + Math.PI / 2);

        //this.a.y = Math.abs(this.v.y) * 2.5;
        this.a.x = -this.v.x * 1.5;
    }

    update(dt) {
        if (Math.abs(this.v.x) < 100)
            this.a.x = 0;
    }
}

export class RollComponent {
    constructor(target) {
        this.target = target;
        this.rot0 = this.target.rotation;
        this.v = 0;
    }

    start() {
        if (!this.target.onGround)
            return;

        this.v = Math.PI * 2;
        if (this.target.v.x < 0)
            this.v = -this.v;
    }

    update(dt) {
        if (this.v == 0)
            return;

        this.target.rotation += this.v * dt;

        if (this.target.onGround) {
            this.v = 0;
            this.target.rotation = this.rot0;
        }
    }
}

export class FireComponent {
    constructor(target, container) {
        this.target = target;
        this.container = container;
        this.pool = [];
    }

    start() {
        if (!this.target.onGround)
            this.pool.push(new Bullet(this.target, this.container));
    }

    update(dt) {
        this.pool.forEach(function(element) {
            element.update(dt);
        });
    }
}