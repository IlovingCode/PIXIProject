import { Point, Sprite } from 'pixi.js';
import * as input from 'engine/input';

export class Soldier {
    constructor(sprite, pos, container) {
        this.sprite = sprite;
        this.sprite.scale.set(0.5, 0.5);
        this.sprite.position.copy(pos);
        this.sprite.v = new Point;
        this.sprite.a = new Point;

        this.comp = [];
        this.comp.push(new JumpComponent(this.sprite));
        this.comp.push(new RollComponent(this.sprite));
        this.comp.push(new MoveComponent(this.sprite));
        this.comp.push(new ForceComponent(this.sprite));
        this.comp.push(new FireComponent(this.sprite, container));
    }

    update(dt) {
        this.comp.forEach(function(element) {
            element.update(dt);
        });

        if (input.buttonPressed("Space")) {
            this.comp.forEach(function(element) {
                element.start();
            });
        }
    }
}

export class JumpComponent {
    constructor(target) {
        this.position = target.position;
        this.y0 = this.position.y;
        this.v = target.v;
        this.a = target.a;
    }

    start() {
        if (this.position.y < this.y0)
            return;

        this.v.y = -500;
        this.a.y = Math.abs(this.v.y) * 2;
    }

    update(dt) {
        if (this.v.y == 0)
            return;

        this.v.y += this.a.y * dt;
        this.position.y += this.v.y * dt;

        if (this.position.y > this.y0) {
            this.v.y = 0;
            this.position.y = this.y0;
        }
    }
}

export class MoveComponent {
    constructor(target) {
        this.position = target.position;
        this.y0 = this.position.y;
        this.v = target.v;
        this.a = target.a;
    }

    start() {
    }

    update(dt) {
        if (this.v.x == 0)
            return;

        this.v.x += this.a.x * dt;

        if (this.v.x * this.a.x > 0)
            this.v.x = 0;

        this.position.x += this.v.x * dt;
    }
}

export class ForceComponent {
    constructor(target) {
        this.target = target;
        this.v = target.v;
        this.a = target.a;
        this.y0 = target.position.y;
    }

    start() {
        if (this.target.position.y >= this.y0)
            return;

        this.v.y += 500 * Math.sin(this.target.rotation + Math.PI / 2);
        this.v.x = 300 * Math.cos(this.target.rotation + Math.PI / 2);

        //this.a.y = Math.abs(this.v.y) * 2.5;
        this.a.x = -this.v.x * 1.5;
    }

    update(dt) {
    }
}

export class RollComponent {
    constructor(target) {
        this.target = target;
        this.rot0 = this.target.rotation;
        this.y0 = this.target.position.y;
        this.v = 0;
    }

    start() {
        this.v = Math.PI * 2;
        if (this.target.position.y < this.y0) {
            const sin = Math.sin(this.target.rotation);
            const cos = Math.cos(this.target.rotation);
            if (Math.abs(sin) > Math.abs(cos)) {
                if (cos * sin > 0)
                    this.v = -this.v;
            } else {
                if (cos * sin < 0)
                    this.v = -this.v;
            }
        }
    }

    update(dt) {
        if (this.v == 0)
            return;

        this.target.rotation += this.v * dt;

        if (this.target.position.y >= this.y0) {
            this.v = 0;
            this.target.rotation = this.rot0;
        }
    }
}

export class FireComponent {
    constructor(target, container) {
        this.target = target;
        this.container = container;
    }

    start() {
        const sprite = Sprite.fromFrame("bullet");
        sprite.anchor.set(0.5, 0.5);
        sprite.scale.set(0.1, 0.1);
        sprite.position.copy(this.target.position);
        this.container.addChild(sprite);
    }

    update(dt) {
    }
}

export class Bullet {
    constructor() {

    }
}