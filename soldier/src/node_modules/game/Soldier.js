import { Point, Sprite, Container } from 'pixi.js';
import * as input from 'engine/input';

export class Soldier {
    constructor(sprite, pos) {
        this.sprite = sprite;
        this.sprite.scale.set(0.5, 0.5);
        this.sprite.position.copy(pos);

        this.comp = [];
        this.comp.push(new JumpComponent(this.sprite.position));
        this.comp.push(new RollComponent(this.sprite));
        this.comp.push(new MoveComponent(this.sprite.position));
    }

    update(dt) {
        this.comp.forEach(function (element) {
            element.update(dt);
        });

        if (input.buttonDown("Space")) {
            this.comp.forEach(function (element) {
                element.start();
            });
        }
    }
}

export class JumpComponent {
    constructor(pos) {
        this.position = pos;
        this.v = 0;
    }

    start() {
        this.v = -200;
        this.a = - this.v * 1.5;
        this.y0 = this.position.y;
    }

    update(dt) {
        if (this.v == 0)
            return;

        this.v += this.a * dt;
        this.position.y += this.v * dt;

        if (this.position.y > this.y0) {
            this.v = 0;
            this.position.y = this.y0;
        }
    }
}

export class RollComponent {
    constructor(target) {
        this.target = target;
        this.duration = 1.3;
        this.angle = 2 * Math.PI;
        this.t = this.duration;
        this.rot0 = this.target.rotation;
    }

    start() {
        this.t = 0;
    }

    update(dt) {
        if (this.t >= this.duration)
            return;

        this.t += dt;

        if (this.t >= this.duration)
            this.t = this.duration;

        this.target.rotation = this.rot0 + this.angle * this.t / this.duration;
    }
}

export class MoveComponent {
    constructor(pos) {
        this.position = pos;
        this.v = 50;
    }

    start() {
    }

    update(dt) {
        this.position.x += this.v * dt;
    }
}