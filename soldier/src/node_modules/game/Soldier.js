import { Point, Sprite, Text } from 'pixi.js';
import * as input from 'engine/input';
import { RollComponent, ForceComponent, FireComponent, JumpComponent, MoveComponent } from 'game/Components';

export const createSprite = function(id, container) {
    const sprite = Sprite.fromFrame(id);
    sprite.anchor.set(0.5, 0.5);
    container.addChild(sprite);
    return sprite;
};

export const checkBound = function(bound, target) {
    const x = target.width * 0.5;
    const y = target.height * 0.5;
    if (target.position.x < bound.x + x
        || target.position.x > bound.width - x) {
        target.v.x = -target.v.x;
        target.a.x = -target.a.x;
    }
};

export class Soldier {
    constructor(pos, container) {
        this.sprite = createSprite("soldier", container);
        this.sprite.scale.set(0.5, 0.5);
        this.sprite.position.set(pos.x, pos.y - this.sprite.height / 2);
        this.sprite.v = new Point;
        this.sprite.a = new Point;
        this.sprite.onGround = true;

        this.comp = [];
        this.comp.push(new RollComponent(this.sprite));
        this.comp.push(new MoveComponent(this.sprite));
        this.comp.push(new ForceComponent(this.sprite));
        this.comp.push(new FireComponent(this.sprite, container));
        this.comp.push(new JumpComponent(this.sprite));
    }

    update(dt) {
        this.comp.forEach(function(element) {
            element.update(dt);
        });

        if (input.buttonPressed("Space")) {
            this.comp.forEach(function(element) {
                element.start();
            });
        }
    }
}

export class Bullet {
    constructor(target, container) {
        this.sprite = createSprite('bullet', container);
        this.sprite.scale.set(0.1, 0.1);

        const rot = target.rotation + Math.PI / 2;
        const d = new Point(Math.cos(rot), Math.sin(rot));

        this.sprite.position.set(
            target.position.x - d.x * target.width / 2,
            target.position.y - d.y * target.width / 2,
        );

        const spd = 500;
        this.sprite.v = new Point(-d.x * spd, -d.y * spd);
        this.sprite.a = new Point;

        this.comp = new MoveComponent(this.sprite);
    }

    update(dt) {
        this.comp.update(dt);
    }
}

export class Enemy {
    constructor(pos, container) {
        this.sprite = createSprite("enemy", container);
        this.sprite.scale.set(1, 1);
        this.sprite.anchor.set(0.5, 1);
        this.sprite.position.copy(pos);

        //this.pos0 = pos;

        this.health = 5;
        this.text = new Text(this.health.toString());
        this.text.position.set(0, -this.sprite.height * 0.5 / this.sprite.scale.y);
        this.text.anchor.set(0.5, 0.5);
        this.sprite.addChild(this.text);

        this.sprite.v = new Point;
        this.sprite.a = new Point;

        this.comp = new MoveComponent(this.sprite);
    }

    damage() {
        this.health--;
        this.text.text = this.health.toString();
    }

    update(dt) {
        this.comp.update(dt);
    }
}