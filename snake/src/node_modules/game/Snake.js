import { Point, Sprite } from 'pixi.js';
import * as input from 'engine/input';

class Target {
    constructor(pos, rot) {
        this.position = pos;
        this.rotation = rot;
    }
}

export class Head {
    init(pos) {
        this.sprite = this.createSprite();
        this.sprite.position.set(pos.x, pos.y);
        this.direction = new Point(0, 0);
        this.speed = 1;
        this.child = new Body;
        this.child.init(this.createSprite(), this);
        this.child.sprite.visible = false;
        this.onRotate();
    }

    onRotate() {
        const angle = this.sprite.rotation - Math.PI / 2.0;
        this.direction.x = Math.cos(angle);
        this.direction.y = Math.sin(angle);
    }

    update(dt) {
        if (this.child != null)
            this.child.update(dt);

        if (input.buttonDown("KeyA")) {
            this.sprite.rotation += Math.PI / 180;
            this.onRotate();
        }

        if (input.buttonDown("KeyD")) {
            this.sprite.rotation -= Math.PI / 180;
            this.onRotate();
        }

        if (input.buttonReleased("Space")) {
            for (let i = 0; i < 5; i++) {
                const newChild = new Body;
                newChild.init(this.createSprite, this);
                newChild.child = this.child;
                this.child.parent = newChild;
                this.child = newChild;

                if (i < 4)
                    newChild.sprite.visible = false;
            }

            this.sprite.position.set(
                this.sprite.x + this.direction.x * this.speed,
                this.sprite.y + this.direction.y * this.speed
            );
        }
    }
}

export class Body {
    init(sprite, parent) {
        this.sprite = sprite;
        this.parent = parent;
        this.child = null;
        this.parent && this.sprite && this.sprite.position.copy(this.parent.sprite.position);
    }

    update(dt) {
        this.child && this.child.update(dt);
        this.sprite && this.sprite.position.copy(this.parent.sprite.position);
    }
}