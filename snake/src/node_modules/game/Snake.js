import { Point, Sprite } from 'pixi.js';
import * as input from 'engine/input';

export class Head {
    init(pos) {
        this.sprite = this.createSprite();
        this.sprite.position.set(pos.x, pos.y);
        this.direction = new Point(0, 0);
        this.speed = 1;
        this.child = null;
        this.onRotate();
    }

    onRotate() {
        let angle = this.sprite.rotation - Math.PI / 2.0;
        this.direction.x = Math.cos(angle);
        this.direction.y = Math.sin(angle);
    }

    update(dt) {
        if (input.buttonDown("KeyA")) {
            this.sprite.rotation += Math.PI / 180;
            this.onRotate();
        }

        if (input.buttonDown("KeyD")) {
            this.sprite.rotation -= Math.PI / 180;
            this.onRotate();
        }

        if (input.buttonReleased("Space")) {
            if (this.child == null) {
                this.child = new Body;
                this.child.init(this.createSprite(), this);
            } else {
                let newChild = new Body;
                newChild.init(this.createSprite(), this);
                newChild.child = this.child;
                this.child.parent = newChild;
                this.child = newChild;
            }
        }

        this.sprite.position.set(
            this.sprite.x + this.direction.x * this.speed,
            this.sprite.y + this.direction.y * this.speed
        );

        if (this.child != null)
            this.child.update(dt);
    }
}

export class Body {
    init(sprite, parent) {
        this.sprite = sprite;
        this.parent = parent;
        this.distance = 50;
        this.direction = parent.direction.clone();
        this.child = null;
    }

    update(dt) {
        this.sprite.position.set(
            this.parent.sprite.x - this.direction.x * this.distance,
            this.parent.sprite.y - this.direction.y * this.distance,
        );
        
        //this.sprite.rotation = this.parent.sprite.rotation;

        if (this.child != null)
            this.child.update(dt);
    }
}